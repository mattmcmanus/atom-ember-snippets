'.source.coffee':

  'run.bind (target, method, args*)':
    'prefix': 'run_bind'
    'body': "Ember.run.bind( ${1:myContext} , ${2:myFunc} )"




  'run.begin (Begins a new RunLoop)':
    'prefix': 'run_begin'
    'body': "Ember.run.begin()"




  'run.cancel (Cancels a scheduled item)':
    'prefix': 'run_cancel'
    'body': "Ember.run.cancel( ${1:scheduled} )"




  'run.debounce (target, method, args*, wait(ms), immediate)':
    'prefix': 'run_debounce'
    'body': "Ember.run.debounce( ${1:myContext} , ${2:myFunc} , ${3:150} )"




  'run.end (Ends a run loop)':
    'prefix': 'run_end'
    'body': "Ember.run.end()"




  'run.join (target, method, args*)':
    'prefix': 'run_join'
    'body': "Ember.run.join( () -> ${1} )"




  'run.later (target, method, args*, wait)':
    'prefix': 'run_later'
    'body':
      """
        Ember.run.later( myContext , () ->
          ${1:# code here will execute within a RunLoop in about 500ms with this == myContext}
        , ${2:500})
      """




  'run.next (target, method, args*)':
    'prefix': 'run_next'
    'body': "Ember.run.next()"




  'run.once (Schedule a function to run one time)':
    'prefix': 'run_once'
    'body':
      """
        Ember.run.once( ${1:context} ,
          () ->
            ${2:#logic}
        )
      """




  'run.queues (Array of named queues)':
    'prefix': 'run_queues'
    'body':"Ember.run.queues()"



  'run.schedule (queue, target, method, args*)':
    'prefix': 'run_schedule'
    'body':
      """
        Ember.run.schedule "${1:sync}", this, ->
          ${2}
      """


  'run.scheduleOnce (queue, target, method, args*)':
    'prefix': 'run_scheduleOnce'
    'body':
      """
        Ember.run.scheduleOnce( ${1:'actions'} , ${2:myContext} , () ->
          #logic
        )
      """



  'run.sync (flushes events scheduled in sync queue.)':
    'prefix': 'run_sync'
    'body': "Ember.run.sync()"



  'run.throttle ( target, method, args*, spacing(ms), immediate(bool) )':
    'prefix': 'run_throttle'
    'body': "Ember.run.throttle(${1:myContext} , ${2:myFunc} , ${3:200})"
